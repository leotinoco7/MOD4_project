generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  cpf       Int
  isAdmin   Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profiles  Profile[]
}

model Game {
  id                 String       @id @default(uuid())
  title              String
  coverImageURL      String
  description        String
  year               Int
  trailerYt          String
  imdbScore          Int
  gameplayYouTubeUrl String
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  genres             GamesGenre[]

  // profiles           Profile[]
  // GamesProfile       GamesProfile[]
}

model Genre {
  id        String       @id @default(uuid())
  name      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  games     GamesGenre[]
}

model Profile {
  id        String   @id @default(uuid())
  title     String
  imageURL  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // games        Game[]
  // GamesProfile GamesProfile[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String

}

model GamesGenre {
  id     String @id @default(uuid())
  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  genre   Genre  @relation(fields: [genreId], references: [id])
  genreId String
  @@unique([gameId, genreId])
}

// model GamesProfile {
//   id     String @id @default(uuid())
//   game   Game   @relation(fields: [gameId], references: [id])
//   gameId String

//   profile   Profile @relation(fields: [profileId], references: [id])
//   profileId String

//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
// }
